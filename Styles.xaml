<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:KP">





    <Style x:Key="BlueLogin" TargetType="Button">
       
            
                <Setter Property="Background" Value="#FF2D14A8"></Setter>
                <Setter Property="Cursor" Value="Hand"></Setter>
                <Style.Triggers>
                    <Trigger Property="IsMouseOver" Value="True">
                        <Setter Property="Background" Value="#FF2136CA"></Setter>
                    </Trigger>
                </Style.Triggers>
            
        
        
    </Style>
    <Style x:Key="PinkLogin" TargetType="Button">


        <Setter Property="Background" Value="#FFC83E78"></Setter>
        <Setter Property="Cursor" Value="Hand"></Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="#FFE55C96"></Setter>
            </Trigger>
        </Style.Triggers>



    </Style>


    <Storyboard x:Key="ExitAnimation">
        <DoubleAnimation Storyboard.Target="{Binding ElementName='window'}"
                             Storyboard.TargetProperty="(Window.Opacity)"
                             Duration="0:0:1" From="1" To="0"/>
    </Storyboard>
    <Style x:Key="StyleForMarketButton" TargetType="Button">
        
        <Setter Property="Background" Value="Black"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Background="{TemplateBinding Background}" BorderBrush="Black" BorderThickness="1">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="#4d4d4d"/>
                <Setter Property="Opacity" Value="0.2"></Setter>
                
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="RectangleStyle" TargetType="Rectangle">
        <Setter Property="RadiusX" Value="100"></Setter>
        <Style.Triggers>
            <EventTrigger RoutedEvent="Rectangle.MouseEnter">
                <BeginStoryboard>
                    <Storyboard>
                        <ParallelTimeline>
                            <ColorAnimation Duration="0:0:0.4" Storyboard.TargetProperty="Fill.Color" To="#15181B"/>
                        </ParallelTimeline>
                    </Storyboard>
                </BeginStoryboard>
            </EventTrigger>
            <EventTrigger RoutedEvent="Rectangle.MouseLeave">
                <BeginStoryboard>
                    <Storyboard>
                        <ParallelTimeline  >
                            <ColorAnimation Duration="0:0:0.4" Storyboard.TargetProperty="Fill.Color" To="Black" />
                        </ParallelTimeline>
                    </Storyboard>
                </BeginStoryboard>
            </EventTrigger>
        </Style.Triggers>

    </Style>

  
    
    <Style x:Key="ComboBoxTest2" TargetType="{x:Type ComboBox}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ComboBox">
                    <Grid>
                        <ToggleButton Grid.Column="2" Focusable="false" IsChecked="{Binding Path=IsDropDownOpen,Mode=TwoWay,RelativeSource={RelativeSource TemplatedParent}}" >
                            <ToggleButton.Template>
                                <ControlTemplate>
                                    <Grid x:Name="mygrid">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="5*" />
                                            <ColumnDefinition Width="*" />
                                        </Grid.ColumnDefinitions>
                                        <Border x:Name="Border"  Grid.ColumnSpan="2" CornerRadius="6" Background="#212122" BorderBrush="{ Binding ElementName = Arrow1, Path = Fill }" BorderThickness="2" />
                                        <Border Grid.Column="0" CornerRadius="5,0,0,5"    Background="#212122"  BorderBrush="{ Binding ElementName = Arrow1, Path = Fill, TargetNullValue=#FFC03030 }" BorderThickness="2,2,0,2" />
                                        <Path x:Name="Arrow" Grid.Column="1"  Fill="#85868D" HorizontalAlignment="Center" VerticalAlignment="Center" Data="M 0 0 L 4 4 L 8 0 Z"/>
                                    </Grid>
                                    <ControlTemplate.Triggers>
                                        <Trigger Property="ToggleButton.IsMouseOver" Value="true">
                                            <Setter TargetName="Border" Property="Background" Value="#18191A" />
                                        </Trigger>
                                        <Trigger Property="ToggleButton.IsChecked" Value="true">
                                            <Setter TargetName="Border" Property="Background" Value="#18191A" />
                                        </Trigger>
                                    </ControlTemplate.Triggers>
                                </ControlTemplate>
                            </ToggleButton.Template>
                        </ToggleButton>
                        <ContentPresenter Name="ContentSite" IsHitTestVisible="False"  Content="{TemplateBinding SelectionBoxItem}" ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}" ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}" Margin="3"  />
                        <TextBox x:Name="PART_EditableTextBox" Visibility="Hidden" IsReadOnly="{TemplateBinding IsReadOnly}"/>
                        <Popup Name="Popup" Placement="Bottom" IsOpen="{TemplateBinding IsDropDownOpen}" AllowsTransparency="True"  Focusable="False" PopupAnimation="Slide">
                            <Grid  Name="DropDown" SnapsToDevicePixels="True" MinWidth="{TemplateBinding ActualWidth}" MaxHeight="{TemplateBinding MaxDropDownHeight}">
                                <Grid.RowDefinitions>
                                    <RowDefinition></RowDefinition>
                                </Grid.RowDefinitions>
                                <Border x:Name="DropDownBorder" Background="#212122" />
                                <ScrollViewer VerticalScrollBarVisibility="Hidden" CanContentScroll="False">
                                    
                                   
                                        <StackPanel IsItemsHost="True" />
                                    
                                </ScrollViewer>
                                
                            </Grid>
                            
                        </Popup>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
        </Style.Triggers>
    </Style>
    <Style x:Key="ComboBoxTest1" TargetType="{x:Type ComboBox}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ComboBox">
                    <Grid>
                        <ToggleButton Grid.Column="2" Focusable="false" IsChecked="{Binding Path=IsDropDownOpen,Mode=TwoWay,RelativeSource={RelativeSource TemplatedParent}}" >
                            <ToggleButton.Template>
                                <ControlTemplate>
                                    <Grid x:Name="mygrid">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="5*" />
                                            <ColumnDefinition Width="*" />
                                        </Grid.ColumnDefinitions>
                                        <Border x:Name="Border"  Grid.ColumnSpan="2" CornerRadius="6" Background="#212122" BorderBrush="{ Binding ElementName = Arrow2, Path = Fill }" BorderThickness="2" />
                                        <Border Grid.Column="0" CornerRadius="5,0,0,5"    Background="#212122"  BorderBrush="{ Binding ElementName = Arrow2, Path = Fill, TargetNullValue=#FFC03030 }" BorderThickness="2,2,0,2" />
                                        <Path x:Name="Arrow" Grid.Column="1"  Fill="#85868D" HorizontalAlignment="Center" VerticalAlignment="Center" Data="M 0 0 L 4 4 L 8 0 Z"/>
                                    </Grid>
                                    <ControlTemplate.Triggers>
                                        <Trigger Property="ToggleButton.IsMouseOver" Value="true">
                                            <Setter TargetName="Border" Property="Background" Value="#18191A" />
                                        </Trigger>
                                        <Trigger Property="ToggleButton.IsChecked" Value="true">
                                            <Setter TargetName="Border" Property="Background" Value="#18191A" />
                                        </Trigger>
                                    </ControlTemplate.Triggers>
                                </ControlTemplate>
                            </ToggleButton.Template>
                        </ToggleButton>
                        <ContentPresenter Name="ContentSite" IsHitTestVisible="False"  Content="{TemplateBinding SelectionBoxItem}" ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}" ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}" Margin="3"  />
                        <TextBox x:Name="PART_EditableTextBox" Visibility="Hidden" IsReadOnly="{TemplateBinding IsReadOnly}"/>
                        <Popup Name="Popup" Placement="Bottom" IsOpen="{TemplateBinding IsDropDownOpen}" AllowsTransparency="True"  Focusable="False" PopupAnimation="Slide">
                            <Grid  Name="DropDown" SnapsToDevicePixels="True" MinWidth="{TemplateBinding ActualWidth}" MaxHeight="{TemplateBinding MaxDropDownHeight}"  >
                                <Grid.RowDefinitions>
                                    <RowDefinition></RowDefinition>
                                </Grid.RowDefinitions>
                                <Border x:Name="DropDownBorder" Background="#212122" />
                                <ScrollViewer VerticalScrollBarVisibility="Hidden" CanContentScroll="False">


                                    <StackPanel IsItemsHost="True" />

                                </ScrollViewer>

                            </Grid>

                        </Popup>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
        </Style.Triggers>
    </Style>


</ResourceDictionary>